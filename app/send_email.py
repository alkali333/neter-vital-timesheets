import os
from dotenv import load_dotenv
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from models import User

load_dotenv()


def send_confirmation_email(user_id: int, shift_details: str, session):
    user = session.query(User).filter_by(user_id=user_id).one()

    if not user:
        raise ValueError(f"User with id {user_id} not found")

    # Email credentials
    username = os.getenv("EMAIL_USERNAME")
    password = os.getenv("EMAIL_PASSWORD")

    # SMTP settings
    smtp_server = os.getenv("SMTP_SERVER")
    smtp_port = int(os.getenv("SMTP_PORT"))

    # Email content
    sender = "your-email@ionos.com"
    recipient = user
    subject = f"{user.name} completed their shift"
    body = f"""{user.name} has finished their shift. Total paid hours today: {shift_details}
            \n\n\n
            This email was automatically generated by Neter Vital Timesheets"""

    # Setup the MIME
    message = MIMEMultipart()
    message["From"] = sender
    message["To"] = recipient
    message["Subject"] = subject

    # Add body to email
    message.attach(MIMEText(body, "plain"))

    # Connect to the server
    server = smtplib.SMTP(smtp_server, smtp_port)
    server.starttls()  # Can be server.ssl() if using SSL
    server.login(username, password)

    # Send the email
    server.send_message(message)

    # Disconnect from the server
    server.quit()
